<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\MainBoard.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\MainBoard.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Wed Dec 23 14:48:13 2020
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; prvSetupHardware &rArr; BSP_Init &rArr; UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[25]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[16]">SCTM1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">SCTM1_IRQHandler</a><BR>
 <LI><a href="#[26]">COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[19]">BFTM0_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1a]">BFTM1_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[e]">EVWUP_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[14]">GPTM0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1b]">I2C0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[b]">LVD_BOD_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[13]">MCTM0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[15]">SCTM0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[16]">SCTM1_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[17]">SCTM2_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[18]">SCTM3_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1d]">SPI0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[22]">SystemInit</a> from system_ht32f5xxxx_01.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[20]">UART0_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[21]">UART1_IRQHandler</a> from ht32f5xxxx_01_it.o(.text) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[1f]">USART0_IRQHandler</a> from startup_ht32f52231_41.o(RESET) referenced from startup_ht32f52231_41.o(RESET)
 <LI><a href="#[24]">__main</a> from __main.o(!!!main) referenced from startup_ht32f52231_41.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SCTM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCTM1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCTM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_IRQHandler
</UL>

<P><STRONG><a name="[e]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1b]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[b]"></a>LVD_BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>MCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PDMA_CH0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2a]"></a>PDMA_CH2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[15]"></a>SCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SCTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SCTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1f]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2f]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f52231_41.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[25]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_ht32f52231_41.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[30]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[32]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a6]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a7]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[a9]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[af]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[bd]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[be]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[bf]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[c0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[c1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[c2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[31]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[c3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[c4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; prvSetupHardware &rArr; BSP_Init &rArr; UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[c5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[a5]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[c6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3e]"></a>ADC_DeInit</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ADC_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[c7]"></a>ADC_Reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>ADC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[79]"></a>ADC_RegularGroupConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[7a]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[7b]"></a>ADC_RegularTrigConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[c8]"></a>ADC_SamplingTimeConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[c9]"></a>ADC_GetConversionData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>ADC_IntConfig</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[ca]"></a>ADC_GetIntStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>ADC_ClearIntPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>ADC_AWDConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>ADC_AWDSingleChannelConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>ADC_AWDThresholdsConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>BFTM_DeInit</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ht32f5xxxx_bftm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>

<P><STRONG><a name="[6c]"></a>BFTM_EnaCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
</UL>

<P><STRONG><a name="[69]"></a>BFTM_SetCompare</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
</UL>

<P><STRONG><a name="[cf]"></a>BFTM_GetCompare</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>BFTM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
</UL>

<P><STRONG><a name="[d0]"></a>BFTM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>BFTM_OneShotModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>BFTM_IntConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
</UL>

<P><STRONG><a name="[d2]"></a>BFTM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>BFTM_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM1_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM0_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>CKCU_GetSysClockSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_SysClockConfig
</UL>

<P><STRONG><a name="[41]"></a>CKCU_SysClockConfig</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetSysClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_DeInit
</UL>

<P><STRONG><a name="[45]"></a>CKCU_GetClockReadyStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_WaitHSEReady
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_DeInit
</UL>

<P><STRONG><a name="[44]"></a>CKCU_HSICmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_DeInit
</UL>

<P><STRONG><a name="[43]"></a>CKCU_DeInit</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_HSICmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClockReadyStatus
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_SysClockConfig
</UL>

<P><STRONG><a name="[d3]"></a>CKCU_HSECmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>CKCU_PLLCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>CKCU_WaitHSEReady</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClockReadyStatus
</UL>

<P><STRONG><a name="[d5]"></a>CKCU_PLLInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>CKCU_SetHCLKPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>CKCU_SetCKREFPrescaler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>CKCU_SetADCnPrescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[48]"></a>CKCU_GetPLLFrequency</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, ht32f5xxxx_ckcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CKCU_GetPLLFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[47]"></a>CKCU_GetClocksFrequency</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
</UL>

<P><STRONG><a name="[d8]"></a>CKCU_SetPeripPrescaler</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, ht32f5xxxx_ckcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[d9]"></a>CKCU_CKMCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>CKCU_PSRCWKUPCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>CKCU_CKOUTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>CKCU_GetIntStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>CKCU_ClearIntFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>CKCU_IntConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>CKCU_SleepClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>CKCU_IS_PLL_USED</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>CKCU_IS_HSI_USED</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>CKCU_IS_HSE_USED</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>CKCU_MCUDBGConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>CKCU_BKISOCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 80 bytes, Stack size 28 bytes, ht32f5xxxx_ckcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableDebugPort
</UL>

<P><STRONG><a name="[e5]"></a>CKCU_HSIAutoTrimClkConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>CKCU_HSIAutoTrimCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>CKCU_HSIAutoTrimIsReady</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ht32f5xxxx_ckcu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[e7]"></a>EXTI_DeInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>EXTI_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[83]"></a>EXTI_IntConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[e8]"></a>EXTI_WakeupEventConfig</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>EXTI_WakeupEventIntConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>EXTI_ClearEdgeFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
</UL>

<P><STRONG><a name="[ea]"></a>EXTI_ClearWakeupFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>EXTI_GetEdgeFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>EXTI_GetEdgeStatus</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>EXTI_GetWakeupFlagStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>EXTI_SWIntCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>EXTI_GetSWCmdStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>GPIO_DeInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>

<P><STRONG><a name="[75]"></a>GPIO_DirectionConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
</UL>

<P><STRONG><a name="[52]"></a>GPIO_PullResistorConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableDebugPort
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_InputConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[f0]"></a>GPIO_DriveConfig</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>GPIO_OpenDrainConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>GPIO_ReadInBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>

<P><STRONG><a name="[f2]"></a>GPIO_ReadInData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>GPIO_ReadOutBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>GPIO_ReadOutData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>GPIO_SetOutBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>GPIO_ClearOutBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>GPIO_WriteOutBits</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
</UL>

<P><STRONG><a name="[f7]"></a>GPIO_WriteOutData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>GPIO_PinLock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>GPIO_IsPortLocked</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>GPIO_IsPinLocked</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>AFIO_GPxConfig</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableDebugPort
</UL>

<P><STRONG><a name="[4f]"></a>GPIO_DisableDebugPort</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>

<P><STRONG><a name="[fb]"></a>GPIO_GetID</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>AFIO_DeInit</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>

<P><STRONG><a name="[81]"></a>AFIO_EXTISourceConfig</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, ht32f5xxxx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFIO_EXTISourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[fc]"></a>_GPIO_ClockControl</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>_AFIO_ClockControl</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>RSTCU_GetResetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_rstcu.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>RSTCU_ClearResetFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_rstcu.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>RSTCU_ClearAllResetFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_rstcu.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>RSTCU_PeripReset</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, ht32f5xxxx_rstcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_DeInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_DeInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_DeInit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[54]"></a>TM_DeInit</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>

<P><STRONG><a name="[71]"></a>TM_TimeBaseInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
</UL>

<P><STRONG><a name="[73]"></a>TM_OutputInit</STRONG> (Thumb, 196 bytes, Stack size 28 bytes, ht32f5xxxx_tm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TM_OutputInit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
</UL>

<P><STRONG><a name="[57]"></a>TM_CHPSCConfig</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_PwmInputInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_CaptureInit
</UL>

<P><STRONG><a name="[55]"></a>TM_CaptureInit</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_CHPSCConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TM_CHx_Config
</UL>

<P><STRONG><a name="[58]"></a>TM_PwmInputInit</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_CHPSCConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TM_CHx_Config
</UL>

<P><STRONG><a name="[101]"></a>TM_TimeBaseStructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>TM_OutputStructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>TM_CaptureStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>TM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
</UL>

<P><STRONG><a name="[5a]"></a>TM_StiConfig</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ChExternalClockConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ItiExternalClockConfig
</UL>

<P><STRONG><a name="[59]"></a>TM_ItiExternalClockConfig</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_StiConfig
</UL>

<P><STRONG><a name="[5b]"></a>TM_ChExternalClockConfig</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_StiConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TM_CHx_Config
</UL>

<P><STRONG><a name="[5d]"></a>TM_EtiConfig</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_EtiExternalClockConfig
</UL>

<P><STRONG><a name="[5c]"></a>TM_EtiExternalClockConfig</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_EtiConfig
</UL>

<P><STRONG><a name="[104]"></a>TM_PrescalerConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>TM_CounterModeConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>TM_DecoderConfig</STRONG> (Thumb, 116 bytes, Stack size 36 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>TM_ForcedOREF</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>TM_CRRPreloadCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>TM_CHCCRPreloadConfig</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>TM_ClearOREFConfig</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>TM_ChPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>TM_ImmActiveConfig</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>TM_ChannelConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>TM_OutputModeConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ht32f5xxxx_tm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TM_OutputModeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
</UL>

<P><STRONG><a name="[10e]"></a>TM_UpdateCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>TM_UEVG_IntConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>TM_HallInterfaceCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>TM_SinglePulseModeCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>TM_MMSELConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>TM_SlaveModeConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>TM_TimSyncCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>TM_SetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>TM_SetCounterReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>TM_SetCaptureCompare</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TM_SetCaptureCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Send_PWM
</UL>

<P><STRONG><a name="[117]"></a>TM_SetAsymmetricCompare</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>TM_CKDIVConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>TM_GetCaptureCompare</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>TM_GetCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>TM_GetPrescaler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>TM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>TM_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>TM_ClearFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>TM_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>TM_GetIntStatus</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>TM_ClearIntPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>TM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>USART_DeInit</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[5f]"></a>USART_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[123]"></a>USART_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>USART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>USART_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>USART_GetIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>USART_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>USART_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_UART0_SendData
</UL>

<P><STRONG><a name="[6f]"></a>USART_TxRxCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ht32f5xxxx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_TxRxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[125]"></a>USART_ForceBreakCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>USART_StickParityCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>USART_StickParityConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>USART_TXRXTLConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>USART_SetTimeOutValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>USART_FIFOReset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>USART_GetFIFOStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>USART_HardwareFlowControlCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>USART_IrDAConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>USART_SetIrDAPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>USART_IrDADirectionConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>USART_IrDAInvtCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>USART_RS485TxEnablePolarityConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>USART_RS485NMMCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>USART_RS485AADCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>USART_SetAddressMatchValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>USART_SynClockInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>USART_SynClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>DIV32_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>Rand_Init</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[13b]"></a>NVIC_LowPowerConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>NVIC_SetPendingSystemHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>SYSTICK_ClockSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>SYSTICK_CounterCmd</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>SYSTICK_IntConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>SYSTICK_SetReloadValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>RBIT</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>SystemInit</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, system_ht32f5xxxx_01.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 160 bytes, Stack size 12 bytes, system_ht32f5xxxx_01.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_HSIAutoTrimIsReady
</UL>

<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; prvSetupHardware &rArr; BSP_Init &rArr; UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_MachinePowerOn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[64]"></a>NVIC_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[66]"></a>CKCU_Configuration</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CKCU_Configuration &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[67]"></a>TIME_Configuration</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIME_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_IntConfig
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCounter
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCompare
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_EnaCmd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[6d]"></a>UART_Configuration</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxRxCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[70]"></a>PWM_Configuration</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PWM_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_OutputModeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_OutputInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBaseInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM0_IRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
</UL>

<P><STRONG><a name="[77]"></a>ADC_Configuration</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ADC_Configuration &rArr; ADC_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_SetADCnPrescaler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularTrigConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularGroupConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[80]"></a>GPIO_Configuration</STRONG> (Thumb, 1104 bytes, Stack size 32 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GPIO_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_EXTISourceConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_IntConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[84]"></a>BSP_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BSP_Init &rArr; UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[85]"></a>Param_Init</STRONG> (Thumb, 876 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Param_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[60]"></a>prvSetupHardware</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = prvSetupHardware &rArr; BSP_Init &rArr; UART_Configuration &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearEdgeFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearEdgeFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BFTM0_IRQHandler &rArr; PWM_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Send_PWM
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BFTM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART0_IRQHandler</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_IRQHandler &rArr; api_UART0_ReceiveData &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_UART0_ReceiveData
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f52231_41.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>api_GetSystemTimePeriod</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, apilib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_MachinePowerOn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>

<P><STRONG><a name="[96]"></a>api_GetCurrentSystemTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apilib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_MachinePowerOn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>

<P><STRONG><a name="[90]"></a>api_UART0_SendData</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
</UL>

<P><STRONG><a name="[91]"></a>api_Uart0_SendCMDData</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_UART0_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_MachinePowerOn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>

<P><STRONG><a name="[92]"></a>api_ClearUART0ReceiveFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apilib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_UART0_ReceiveData
</UL>

<P><STRONG><a name="[8d]"></a>api_UART0_ReceiveData</STRONG> (Thumb, 270 bytes, Stack size 4 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = api_UART0_ReceiveData &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_ClearUART0ReceiveFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[9a]"></a>Test_Item_Check_Enable</STRONG> (Thumb, 566 bytes, Stack size 12 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Test_Item_Check_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
</UL>

<P><STRONG><a name="[93]"></a>Signal_Send</STRONG> (Thumb, 422 bytes, Stack size 16 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Signal_Send &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>

<P><STRONG><a name="[89]"></a>api_Send_PWM</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = api_Send_PWM &rArr; TM_SetCaptureCompare
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_SetCaptureCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM0_IRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
</UL>

<P><STRONG><a name="[95]"></a>api_Test_Front_Drop</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = api_Test_Front_Drop &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[99]"></a>api_Test_Wheel_Wire</STRONG> (Thumb, 1244 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = api_Test_Wheel_Wire &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Item_Check_Enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[9b]"></a>api_Test_Key_Wire</STRONG> (Thumb, 844 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = api_Test_Key_Wire &rArr; PWM_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Send_PWM
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Item_Check_Enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[9c]"></a>api_Test_Dust_Component</STRONG> (Thumb, 750 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = api_Test_Dust_Component &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Item_Check_Enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[9d]"></a>api_Test_Charge_Guide</STRONG> (Thumb, 1666 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = api_Test_Charge_Guide &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Item_Check_Enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[9e]"></a>api_Test_Along_Side</STRONG> (Thumb, 1264 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = api_Test_Along_Side &rArr; PWM_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Send_PWM
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Configuration
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Item_Check_Enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
</UL>

<P><STRONG><a name="[63]"></a>api_Test_PCB</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = api_Test_PCB &rArr; api_Test_Along_Side &rArr; PWM_Configuration &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Along_Side
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Charge_Guide
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Dust_Component
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Key_Wire
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Wheel_Wire
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_Front_Drop
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>api_MachinePowerOn</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = api_MachinePowerOn &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>Scan_Key</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, apilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Scan_Key &rArr; api_Uart0_SendCMDData &rArr; api_UART0_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Uart0_SendCMDData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetCurrentSystemTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_GetSystemTimePeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[9f]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[142]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Init
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_HSIAutoTrimIsReady
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[14a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[14b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[14c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ht32f5xxxx_ckcu.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_UART0_ReceiveData
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_Test_PCB
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Signal_Send
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[56]"></a>_TM_CHx_Config</STRONG> (Thumb, 76 bytes, Stack size 36 bytes, ht32f5xxxx_tm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ChExternalClockConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_PwmInputInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_CaptureInit
</UL>

<P><STRONG><a name="[68]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Configuration
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[a4]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
